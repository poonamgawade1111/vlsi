ALU CODE:

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

---- Uncomment the following library declaration if instantiating
---- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity alu44 is
    Port ( a,b : in  STD_LOGIC_VECTOR (3 downto 0);
           sel : in  STD_LOGIC_VECTOR (2 downto 0);
           op : out  STD_LOGIC_VECTOR (3 downto 0));
end alu44;

architecture Behavioral of alu44 is

begin
process(a,b,sel)
begin 
case sel is 
when "000"=> op <= a+b;
when "001"=> op <= a-b;
when "010"=> op <= a and b;
when "011"=> op <= a or b;
when "100"=> op <= a nor b;
when "101"=> op <= a xor b;
when "110"=> op <= a+1;
when "111"=> op <= a nand b;
when others => null;
end case;
end process;

end Behavioral;

ALU TESTBENCH:

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.all;
USE ieee.numeric_std.ALL;

ENTITY tb_alu_vhd IS
END tb_alu_vhd;

ARCHITECTURE behavior OF tb_alu_vhd IS 

	-- Component Declaration for the Unit Under Test (UUT)
	COMPONENT alu44
	PORT(
		a : IN std_logic_vector(3 downto 0);
		b : IN std_logic_vector(3 downto 0);
		sel : IN std_logic_vector(2 downto 0);          
		op : OUT std_logic_vector(3 downto 0)
		);
	END COMPONENT;

	--Inputs
	SIGNAL a :  std_logic_vector(3 downto 0) := (others=>'0');
	SIGNAL b :  std_logic_vector(3 downto 0) := (others=>'0');
	SIGNAL sel :  std_logic_vector(2 downto 0) := (others=>'0');

	--Outputs
	SIGNAL op :  std_logic_vector(3 downto 0);

BEGIN

	-- Instantiate the Unit Under Test (UUT)
	uut: alu44 PORT MAP(
		a => a,
		b => b,
		sel => sel,
		op => op
	);

	tb : PROCESS
	BEGIN
	a<="0010";
	b<="0100";
sel <= "000";
wait for 10ns;
sel<="001";
wait for 10ns;
sel<="010";
wait for 10ns;
sel<="011";
wait for 10ns;
sel<="100";
wait for 10ns;
sel<="111";
wait for 10ns;
		-- Wait 100 ns for global reset to finish
		wait for 100 ns;

		-- Place stimulus here

		wait; -- will wait forever
	END PROCESS;

END;